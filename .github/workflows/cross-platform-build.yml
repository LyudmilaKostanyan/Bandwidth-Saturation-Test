name: Cross platform build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
      - uses: actions/checkout@v4
  
      - name: Set reusable strings
        id: strings
        shell: bash
        run: echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
  
          - name: Configure CMake project (Linux & macOS)
          if: runner.os != 'Windows'
          run: |
            cd build
            cmake ..
          
      - name: Configure CMake project (Windows)
        if: runner.os == 'Windows'
        shell: msys2 {0}
        run: |
          cd build
          cmake ..
    
      - name: Build C++ code (Linux & macOS)
        if: runner.os != 'Windows'
        run: |
          cd build
          cmake --build .
        
      - name: Build C++ code (Windows)
        if: runner.os == 'Windows'
        shell: msys2 {0}
        run: |
          cd build
          cmake --build .
  
      - name: Run tests (Linux & macOS)
        if: runner.os != 'Windows'
        run: |
          cd build
          ./main
  
      - name: Run tests (Windows)
        if: runner.os == 'Windows'
        shell: msys2 {0}
        run: |
          cd build
          ./main.exe