name: Cross platform build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]  # Exclude macos-latest (ARM64) for now
        # If macOS x86_64 is needed, use macos-13 (Intel-based), but itâ€™s slower
    
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake g++

      - name: Install dependencies (Windows)
        if: matrix.os == 'windows-latest'
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: mingw-w64-x86_64-cmake mingw-w64-x86_64-gcc
        timeout-minutes: 10  # Prevent premature cancellation

      - name: Create build directory
        run: |
          mkdir -p build
        shell: bash

      - name: Configure CMake (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd build
          cmake -DCMAKE_CXX_FLAGS="-mavx2" ..

      - name: Configure CMake (Windows)
        if: matrix.os == 'windows-latest'
        shell: msys2 {0}
        run: |
          cd build
          cmake -G "MinGW Makefiles" -DCMAKE_CXX_FLAGS="-mavx2" ..

      - name: Build C++ code
        run: |
          cd build
          cmake --build .
        shell: ${{ matrix.os == 'windows-latest' && 'msys2 {0}' || 'bash' }}

      - name: Run tests (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd build
          ./main

      - name: Run tests (Windows)
        if: matrix.os == 'windows-latest'
        shell: msys2 {0}
        run: |
          cd build
          ./main.exe